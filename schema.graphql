type Yield @entity {
  id: ID!
  totalTradingFeesInDai: BigDecimal!
  totalVolumeDai: BigDecimal!
  numVaults: BigInt!

  collateralETH: BigDecimal!
  collateralChai: BigDecimal!

  totalPoolDai: BigDecimal!
  totalPoolFYDai: BigDecimal!

  totalFYDaiDebt: BigDecimal!
  totalFYDaiDebtFromETH: BigDecimal!
  totalFYDaiDebtFromChai: BigDecimal!
}

type FYDai @entity {
  id: ID!
  address: Bytes!
  symbol: String!
  name: String!
  maturity: BigInt!
  totalSupply: BigDecimal!
  pool: Bytes

  apr: String!

  totalVolumeDai: BigDecimal!
  totalTradingFeesInDai: BigDecimal!

  currentFYDaiPriceInDai: BigDecimal!

  poolFYDaiReserves: BigDecimal!
  poolDaiReserves: BigDecimal!
  poolFYDaiReservesWei: BigInt!
  poolDaiReservesWei: BigInt!

  numVaults: BigInt!
  vaults: [VaultFYDai!]! @derivedFrom(field: "fyDai")
}

type Vault @entity {
  id: ID!
  collateralETH: BigDecimal!
  collateralChai: BigDecimal!
  totalFYDaiDebt: BigDecimal!
  totalFYDaiDebtFromETH: BigDecimal!
  totalFYDaiDebtFromChai: BigDecimal!

  numFYDais: BigInt!
  fyDais: [VaultFYDai!]! @derivedFrom(field: "vault")
}

type VaultFYDai @entity {
  id: ID!
  fyDai: FYDai!
  vault: Vault!
  totalFYDaiDebt: BigDecimal!
  fyDaiDebtFromETH: BigDecimal!
  fyDaiDebtFromChai: BigDecimal!
}

type Trade @entity {
  id: ID!
  fyDai: FYDai!
  from: Bytes!
  to: Bytes!

  amountDai: BigDecimal!
  amountFYDai: BigDecimal!

  feeInDai: BigDecimal!
}
